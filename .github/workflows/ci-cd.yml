# .github/workflows/ci-cd.yml

name: Full-Stack CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:

  # ------------------------------
  # 1️⃣ Build & Test Backend
  # ------------------------------
  server_build_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install server dependencies
        run: npm install --prefix ./server --legacy-peer-deps

      # - name: Run server tests
      #   working-directory: ./server
      #   run: npm test --prefix ./server

  # ------------------------------
  # 2️⃣ Build & Test Frontend
  # ------------------------------
  client_build_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install client dependencies
        run: npm install --prefix ./client --legacy-peer-deps

      # - name: Run client tests
      #   working-directory: ./client
      #   run: npm test --prefix ./client

  # ------------------------------
  # 3️⃣ SSH Test to EC2
  # ------------------------------
  ssh_test:
    runs-on: ubuntu-latest
    needs: [server_build_test, client_build_test]
    steps:
      - name: Test SSH connection to EC2
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          port: 22
          script: |
            echo "Hello from EC2!"
            whoami
            pwd

  # ------------------------------
  # 4️⃣ Deploy via SSH
  # ------------------------------
  deploy:
    runs-on: ubuntu-latest
    needs: ssh_test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          port: 22
          script: |
            cd /home/ec2-user/nextwithnest
            git reset --hard
            git pull origin main
            docker-compose down
            docker-compose up -d --build
